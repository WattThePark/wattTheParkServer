


.timer {
	padding: 10px;
	
	overflow: hidden;
	display: inline-block;
	border: 7px solid #35BC35;
	border-radius: 5px;
	position: relative;
	
	
}

.cell {
	/*Should only display 1 digit. Hence height = line height of .numbers
	and width = width of .numbers*/
	width: 0.60em;
	height: 40px;
	font-size: 50px;
	overflow: hidden;
	position: relative;
	float: left;
}

.numbers {
	width: 0.6em;
	line-height: 40px;
	font-family: digital, arial, verdana;
	text-align: center;
	color: #35BC35;
	
	position: absolute;
	top: 0;
	left: 0;
	
	/*Glow to the text*/
	text-shadow: 0 0 5px rgba(255, 255, 255, 1);
}

/*Styles for the controls*/
#timer_controls {
	margin-top: -5px;
}
#timer_controls label {
	cursor: pointer;
	padding: 5px 10px;
	background: #5cb85c;
	border-color: #4cae4c;
	font-family: arial, verdana, tahoma;
	font-size: 15px;
	border-radius: 3px 3px 3px 3px;
}
input[name="controls"] {display: none;}

/*Control code*/
#stop:checked~.timer .numbers {animation-play-state: paused;}
#start:checked~.timer .numbers {animation-play-state: running;}
#reset:checked~.timer .numbers {animation: none;}

.moveten {
	/*The digits move but dont look good. We will use steps now
	10 digits = 10 steps. You can now see the digits swapping instead of 
	moving pixel-by-pixel*/
	animation: moveten 1s steps(10, end) infinite;
	/*By default animation should be paused*/
	animation-play-state: paused;
}
.movesix {
	animation: movesix 1s steps(6, end) infinite;
	animation-play-state: paused;
}

/*Now we need to sync the animation speed with time speed*/
/*One second per digit. 10 digits. Hence 10s*/
.second {animation-duration: 10s;}
.tensecond {animation-duration: 60s;} /*60 times .second*/

.milisecond {animation-duration: 1s;} /*1/10th of .second*/
.tenmilisecond {animation-duration: 0.1s;}
.hundredmilisecond {animation-duration: 0.01s;}

.minute {animation-duration: 600s;} /*60 times .second*/
.tenminute {animation-duration: 3600s;} /*60 times .minute*/

.hour {animation-duration: 36000s;} /*60 times .minute*/
.tenhour {animation-duration: 360000s;} /*10 times .hour*/

/*The stopwatch looks good now. Lets add some styles*/

/*Lets animate the digit now - the main part of this tutorial*/
/*We are using prefixfree, so no need of vendor prefixes*/
/*The logic of the animation is to alter the 'top' value of the absolutely
positioned .numbers*/
/*Minutes and Seconds should be limited to only '60' and not '100'
Hence we need to create 2 animations. One with 10 steps and 10 digits and
the other one with 6 steps and 6 digits*/
@keyframes moveten {
	0% {top: 0;}
	100% {top: -400px;} 
	/*height = 40. digits = 10. hence -400 to move it completely to the top*/
}

@keyframes movesix {
	0% {top: 0;}
	100% {top: -240px;} 
	/*height = 40. digits = 6. hence -240 to move it completely to the top*/
}


/*Lets use a better font for the numbers*/
@font-face {
	font-family: 'digital';
}

#buttonTimer{
	
	color: #fff;
	background: #5cb85c;
	border-color: #4cae4c;
}

.fonctionnalites { background:#FFA81E; color:#FFF; -webkit-border-radius: 6px;-moz-border-radius: 6px;border-radius:6px;font-size:13px; margin-bottom:10px; padding:10px; line-height:18px; }
.fonctionnalites h2 { font-family: 'Oswald',Verdana,sans-serif; color:#F4F8FD; font-size:20px; font-weight:normal; border-bottom:1px solid white; padding-bottom: 5px;margin-bottom: 5px; }
.fonctionnalites strong { font-weight:normal; }
.fonctionnalites ul { list-style: circle;padding-left: 15px; }
.fonctionnalites li { padding-bottom:5px; }
#fonctionnalites_new { margin-bottom:20px; position:relative; top:0px; left:0px; width:auto; height:auto; float:none; }
#fonctionnalites_slider, #fonctionnalites_new_content { float:left; }
#fonctionnalites_slider { width:290px; margin-right: 30px; }
#fonctionnalites_new_content { width:600px; }
#fonc_film {
	
	background:#FFA81E;
}

.pile {
	background-color: #ffffff;
	
}

#mydiv {
    background: linear-gradient(to bottom, white 0%,white 100%,green 100%); /* W3C */
	background-repeat: no-repeat;
	background-attachment:fixed;
	height:410px;
	width: 275px;
   	

	}
	html,body{ height:100%; width: 100%; }

	#image { position : relative; top: -67px; left: -114px; }
	#text {position : relative; top: -300px;}


